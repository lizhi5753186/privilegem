<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lz.privilegem.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lz.privilegem.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="fullname" property="fullname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="BIT" />
    <result column="is_admin" property="isAdmin" jdbcType="BIT" />
    <result column="is_lock" property="isLock" jdbcType="BIT" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, fullname, gender, is_admin, is_lock, is_delete, create_person, 
    create_date, update_person, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lz.privilegem.entity.User" >
    insert into user (id, username, password, 
      fullname, gender, is_admin, 
      is_lock, is_delete, create_person, 
      create_date, update_person, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{fullname,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{isAdmin,jdbcType=BIT}, 
      #{isLock,jdbcType=BIT}, #{isDelete,jdbcType=BIT}, #{createPerson,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lz.privilegem.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="fullname != null" >
        fullname,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="isLock != null" >
        is_lock,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="isLock != null" >
        #{isLock,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lz.privilegem.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        fullname = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="isLock != null" >
        is_lock = #{isLock,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lz.privilegem.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      fullname = #{fullname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      is_admin = #{isAdmin,jdbcType=BIT},
      is_lock = #{isLock,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="where">
    where user.is_delete=0
    <if test="username!=null and username!=''">
      and user.username like '${username}%'
    </if>
    <if test="fullname!=null and fullname!=''">
      and user.fullname like CONCAT(#{fullname},'%')
    </if>
  </sql>
  <sql id="orderby">
    order by user.id desc
  </sql>
  <select id="getUserByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from `user`
    where user.username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="getUserTotalBySearch" parameterType="com.lz.privilegem.entity.UserSearch" resultType="java.lang.Integer">
    select count(0)
    from `user`
    <include refid="where"/>
  </select>

  <select id="getUserListBySearch" parameterType="com.lz.privilegem.entity.UserSearch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <include refid="where"/>
    <include refid="orderby"/>
  </select>
  <delete id="deleteUserRoleById" parameterType="java.lang.Integer">
    delete from user_role where user_id=#{id};
  </delete>
  <insert id="assignRoles">
    insert into user_role(user_id,role_id)
    values
    <foreach collection="roleIds" index="index" item="item" open="" separator="," close="">
      (#{userId},#{item})
    </foreach>
    ;
  </insert>
</mapper>